// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type FundsConfirmationRequest struct {
	// Identificador del consentimiento obtenido en la transacción de solicitar consentimiento. Solo si se ha realizado la gestión del consentimiento a través del API.
	ConsentID string `header:"style=simple,explode=false,name=Consent-ID"`
	// Es contenido si viaja el campo Signature. Digest: SHA-256=NzdmZjA4YjY5M2M2NDYyMmVjOWFmMGNmYTZiNTU3MjVmNDI4NTRlMzJkYzE3ZmNmMDE3ZGFmMjhhNTc5OTU3OQ==
	Digest      string `header:"style=simple,explode=false,name=Digest"`
	RequestBody []byte `request:"mediaType=*/*"`
	// Firma de la peticion por el TPP.
	Signature string `header:"style=simple,explode=false,name=Signature"`
	// Certificado firmado
	TPPSignatureCertificate string `header:"style=simple,explode=false,name=TPP-Signature-Certificate"`
	// Identificador único para la petición dado por el TPP. Relaciona la petición HTTP entre TPP y HUB. Ejemplo: X-Request-ID: 1b3ab8e8-0fd5-43d2-946e-d75958b172e7
	XRequestID string `header:"style=simple,explode=false,name=X-Request-ID"`
	// Nombre del ASPSP al que desea realizar la petición.
	Aspsp string `pathParam:"style=simple,explode=false,name=aspsp"`
}

func (o *FundsConfirmationRequest) GetConsentID() string {
	if o == nil {
		return ""
	}
	return o.ConsentID
}

func (o *FundsConfirmationRequest) GetDigest() string {
	if o == nil {
		return ""
	}
	return o.Digest
}

func (o *FundsConfirmationRequest) GetRequestBody() []byte {
	if o == nil {
		return []byte{}
	}
	return o.RequestBody
}

func (o *FundsConfirmationRequest) GetSignature() string {
	if o == nil {
		return ""
	}
	return o.Signature
}

func (o *FundsConfirmationRequest) GetTPPSignatureCertificate() string {
	if o == nil {
		return ""
	}
	return o.TPPSignatureCertificate
}

func (o *FundsConfirmationRequest) GetXRequestID() string {
	if o == nil {
		return ""
	}
	return o.XRequestID
}

func (o *FundsConfirmationRequest) GetAspsp() string {
	if o == nil {
		return ""
	}
	return o.Aspsp
}

type FundsConfirmationResponse struct {
	Body []byte
	// HTTP response content type for this operation
	ContentType string
	Headers     map[string][]string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *FundsConfirmationResponse) GetBody() []byte {
	if o == nil {
		return nil
	}
	return o.Body
}

func (o *FundsConfirmationResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *FundsConfirmationResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}

func (o *FundsConfirmationResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *FundsConfirmationResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
