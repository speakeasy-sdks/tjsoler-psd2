// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// RequestStartMultibankPaymentDebtorAccount - Cuenta del ordenante
type RequestStartMultibankPaymentDebtorAccount struct {
}

// InstructedAmount - Importe de la transferencia
type InstructedAmount struct {
}

// PaymentPeriod - Periodo por el que se realiza el pago
type PaymentPeriod struct {
}

type RequestStartMultibankPayment struct {
	// Cuenta del ordenante
	DebtorAccount *RequestStartMultibankPaymentDebtorAccount `json:"debtorAccount,omitempty"`
	// Entidad del pago Multibanco
	EntityCode *int64 `json:"entityCode,omitempty"`
	// Importe de la transferencia
	InstructedAmount *InstructedAmount `json:"instructedAmount,omitempty"`
	// Referencia obtenida en la consulta de valor a pagar a la Seguridad Social
	OperationReference *string `json:"operationReference,omitempty"`
	// Código de parámetro asociado al importe. Obtenido en la consulta de catálogo de special-service-payments
	ParameterCode *int64 `json:"parameterCode,omitempty"`
	// Periodo por el que se realiza el pago
	PaymentPeriod *PaymentPeriod `json:"paymentPeriod,omitempty"`
	// Referencia del pago multibanco
	PaymentReference *string `json:"paymentReference,omitempty"`
	// Tipo de pago a la seguridad social
	PaymentType *int64 `json:"paymentType,omitempty"`
	// Código del tipo de pago. Devuelto en el catalogo de tipos pagos al sector público
	PaymentTypeCode *string `json:"paymentTypeCode,omitempty"`
	// Fecha de ejecución futura
	RequestedExecutionDate *string `json:"requestedExecutionDate,omitempty"`
	// Número de identificación del contribuyente
	TaxpayerIdentificationNumber *int64 `json:"taxpayerIdentificationNumber,omitempty"`
	// Código del centro TSU
	TsuCenterCode *int64 `json:"tsuCenterCode,omitempty"`
}

func (o *RequestStartMultibankPayment) GetDebtorAccount() *RequestStartMultibankPaymentDebtorAccount {
	if o == nil {
		return nil
	}
	return o.DebtorAccount
}

func (o *RequestStartMultibankPayment) GetEntityCode() *int64 {
	if o == nil {
		return nil
	}
	return o.EntityCode
}

func (o *RequestStartMultibankPayment) GetInstructedAmount() *InstructedAmount {
	if o == nil {
		return nil
	}
	return o.InstructedAmount
}

func (o *RequestStartMultibankPayment) GetOperationReference() *string {
	if o == nil {
		return nil
	}
	return o.OperationReference
}

func (o *RequestStartMultibankPayment) GetParameterCode() *int64 {
	if o == nil {
		return nil
	}
	return o.ParameterCode
}

func (o *RequestStartMultibankPayment) GetPaymentPeriod() *PaymentPeriod {
	if o == nil {
		return nil
	}
	return o.PaymentPeriod
}

func (o *RequestStartMultibankPayment) GetPaymentReference() *string {
	if o == nil {
		return nil
	}
	return o.PaymentReference
}

func (o *RequestStartMultibankPayment) GetPaymentType() *int64 {
	if o == nil {
		return nil
	}
	return o.PaymentType
}

func (o *RequestStartMultibankPayment) GetPaymentTypeCode() *string {
	if o == nil {
		return nil
	}
	return o.PaymentTypeCode
}

func (o *RequestStartMultibankPayment) GetRequestedExecutionDate() *string {
	if o == nil {
		return nil
	}
	return o.RequestedExecutionDate
}

func (o *RequestStartMultibankPayment) GetTaxpayerIdentificationNumber() *int64 {
	if o == nil {
		return nil
	}
	return o.TaxpayerIdentificationNumber
}

func (o *RequestStartMultibankPayment) GetTsuCenterCode() *int64 {
	if o == nil {
		return nil
	}
	return o.TsuCenterCode
}
