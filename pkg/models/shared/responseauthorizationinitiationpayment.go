// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// ResponseAuthorizationInitiationPaymentLinks - Lista de hipervínculos para ser reconocidos por el TPP. Tipos soportados en esta respuesta:  scaRedirect: en caso de SCA por redirección. Link donde el navegador del PSU debe ser redireccionado por el TPP.  selectAuthenticatio nMethod: link al sub-recurso de  autorización o de autorización de cancelación donde el método SCA seleccionado será informado. • scaStatus: link para consultar el estado SCA correspondiente al sub-recurso de autorización.
type ResponseAuthorizationInitiationPaymentLinks struct {
}

// ResponseAuthorizationInitiationPaymentChoosenScaMethod - NO SOPORTADO EN ESTA VERSIÓN. SOLO EMBEBIDO
type ResponseAuthorizationInitiationPaymentChoosenScaMethod struct {
}

// ResponseAuthorizationInitiationPaymentCurrencyConversionFee - Podría ser usado por el ASPSP para transportar comisiones por conversión específica de la moneda asociada a la transferencia de crédito iniciada.
type ResponseAuthorizationInitiationPaymentCurrencyConversionFee struct {
}

// ResponseAuthorizationInitiationPaymentEstimatedInterbankSettlementAmount - Importe estimado a ser transferido al beneficiario.
type ResponseAuthorizationInitiationPaymentEstimatedInterbankSettlementAmount struct {
}

// ResponseAuthorizationInitiationPaymentEstimatedTotalAmount - Importe el cual se estima que será retirado de la cuenta del ordenante. Este importe incluye comisiones.
type ResponseAuthorizationInitiationPaymentEstimatedTotalAmount struct {
}

// ResponseAuthorizationInitiationPaymentTppMessages - Mensaje para el TPP enviado a través del HUB.
type ResponseAuthorizationInitiationPaymentTppMessages struct {
}

// ResponseAuthorizationInitiationPaymentTransactionFees - Podría ser usado por el ASPSP para transportar la comisión total de la transacción. Este campo incluye el currencyConversiónFees, si es de aplicación.
type ResponseAuthorizationInitiationPaymentTransactionFees struct {
}

type ResponseAuthorizationInitiationPayment struct {
	// Lista de hipervínculos para ser reconocidos por el TPP. Tipos soportados en esta respuesta:  scaRedirect: en caso de SCA por redirección. Link donde el navegador del PSU debe ser redireccionado por el TPP.  selectAuthenticatio nMethod: link al sub-recurso de  autorización o de autorización de cancelación donde el método SCA seleccionado será informado. • scaStatus: link para consultar el estado SCA correspondiente al sub-recurso de autorización.
	Links ResponseAuthorizationInitiationPaymentLinks `json:"_links"`
	// Identificador del recurso que referencia al sub-recurso de autorización creado
	AuthorisationID string `json:"authorisationId"`
	// NO SOPORTADO EN ESTA VERSIÓN. SOLO EMBEBIDO
	ChoosenScaMethod *ResponseAuthorizationInitiationPaymentChoosenScaMethod `json:"choosenScaMethod,omitempty"`
	// Podría ser usado por el ASPSP para transportar comisiones por conversión específica de la moneda asociada a la transferencia de crédito iniciada.
	CurrencyConversionFee *ResponseAuthorizationInitiationPaymentCurrencyConversionFee `json:"currencyConversionFee,omitempty"`
	// Importe estimado a ser transferido al beneficiario.
	EstimatedInterbankSettlementAmount *ResponseAuthorizationInitiationPaymentEstimatedInterbankSettlementAmount `json:"estimatedInterbankSettlementAmount,omitempty"`
	// Importe el cual se estima que será retirado de la cuenta del ordenante. Este importe incluye comisiones.
	EstimatedTotalAmount *ResponseAuthorizationInitiationPaymentEstimatedTotalAmount `json:"estimatedTotalAmount,omitempty"`
	// Texto enviado al TPP a través del HUB para ser mostrado al PSU.
	PsuMessage *string `json:"psuMessage,omitempty"`
	// Este elemento es contenido si SCA es requerido y si el PSU puede elegir entre diferentes métodos de autenticación. Si este dato es contenido también se informará el link "selectAuthenticationM ethod”. Estos métodos deberán ser presentados al PSU. Nota: Solo si ASPSP soporta selección del método SCA
	ScaMethods map[string][]AuthenticationObject `json:"scaMethods,omitempty"`
	// Estado SCA
	ScaStatus string `json:"scaStatus"`
	// Mensaje para el TPP enviado a través del HUB.
	TppMessages *ResponseAuthorizationInitiationPaymentTppMessages `json:"tppMessages,omitempty"`
	// Podría ser usado por el ASPSP para transportar la comisión total de la transacción. Este campo incluye el currencyConversiónFees, si es de aplicación.
	TransactionFees *ResponseAuthorizationInitiationPaymentTransactionFees `json:"transactionFees,omitempty"`
}

func (o *ResponseAuthorizationInitiationPayment) GetLinks() ResponseAuthorizationInitiationPaymentLinks {
	if o == nil {
		return ResponseAuthorizationInitiationPaymentLinks{}
	}
	return o.Links
}

func (o *ResponseAuthorizationInitiationPayment) GetAuthorisationID() string {
	if o == nil {
		return ""
	}
	return o.AuthorisationID
}

func (o *ResponseAuthorizationInitiationPayment) GetChoosenScaMethod() *ResponseAuthorizationInitiationPaymentChoosenScaMethod {
	if o == nil {
		return nil
	}
	return o.ChoosenScaMethod
}

func (o *ResponseAuthorizationInitiationPayment) GetCurrencyConversionFee() *ResponseAuthorizationInitiationPaymentCurrencyConversionFee {
	if o == nil {
		return nil
	}
	return o.CurrencyConversionFee
}

func (o *ResponseAuthorizationInitiationPayment) GetEstimatedInterbankSettlementAmount() *ResponseAuthorizationInitiationPaymentEstimatedInterbankSettlementAmount {
	if o == nil {
		return nil
	}
	return o.EstimatedInterbankSettlementAmount
}

func (o *ResponseAuthorizationInitiationPayment) GetEstimatedTotalAmount() *ResponseAuthorizationInitiationPaymentEstimatedTotalAmount {
	if o == nil {
		return nil
	}
	return o.EstimatedTotalAmount
}

func (o *ResponseAuthorizationInitiationPayment) GetPsuMessage() *string {
	if o == nil {
		return nil
	}
	return o.PsuMessage
}

func (o *ResponseAuthorizationInitiationPayment) GetScaMethods() map[string][]AuthenticationObject {
	if o == nil {
		return nil
	}
	return o.ScaMethods
}

func (o *ResponseAuthorizationInitiationPayment) GetScaStatus() string {
	if o == nil {
		return ""
	}
	return o.ScaStatus
}

func (o *ResponseAuthorizationInitiationPayment) GetTppMessages() *ResponseAuthorizationInitiationPaymentTppMessages {
	if o == nil {
		return nil
	}
	return o.TppMessages
}

func (o *ResponseAuthorizationInitiationPayment) GetTransactionFees() *ResponseAuthorizationInitiationPaymentTransactionFees {
	if o == nil {
		return nil
	}
	return o.TransactionFees
}
