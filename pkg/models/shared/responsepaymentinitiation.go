// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// ResponsePaymentInitiationLinks - Lista de hipervínculos para ser reconocidos por el TPP. Tipos soportados en esta respuesta:
type ResponsePaymentInitiationLinks struct {
}

// ResponsePaymentInitiationChoosenScaMethod - NO SOPORTADO EN ESTA VERSIÓN. SOLO EMBEBIDO
type ResponsePaymentInitiationChoosenScaMethod struct {
}

// ResponsePaymentInitiationCurrencyConversionFee - Podría ser usado por el ASPSP para transportar comisiones por conversión específica de la moneda asociada a la transferencia de crédito iniciada.
type ResponsePaymentInitiationCurrencyConversionFee struct {
}

// ResponsePaymentInitiationEstimatedInterbankSettlemenAmount - Importe estimado a ser transferido al beneficiario.
type ResponsePaymentInitiationEstimatedInterbankSettlemenAmount struct {
}

// ResponsePaymentInitiationEstimatedTotalAmount - Importe el cual se estima que será retirado de la cuenta del ordenante. Nota: este importe incluye comisiones.
type ResponsePaymentInitiationEstimatedTotalAmount struct {
}

// ResponsePaymentInitiationScaMethods - Este elemento es contenido si SCA es requerido y si el PSU puede elegir entre diferentes métodos de autenticación.
type ResponsePaymentInitiationScaMethods struct {
}

// ResponsePaymentInitiationTppMessages - Mensaje para el TPP enviado a través del HUB.
type ResponsePaymentInitiationTppMessages struct {
}

// ResponsePaymentInitiationTransactionFees - Comisiones asociadas al pago.
type ResponsePaymentInitiationTransactionFees struct {
}

type ResponsePaymentInitiation struct {
	// Lista de hipervínculos para ser reconocidos por el TPP. Tipos soportados en esta respuesta:
	Links *ResponsePaymentInitiationLinks `json:"_links,omitempty"`
	// NO SOPORTADO EN ESTA VERSIÓN. SOLO EMBEBIDO
	ChoosenScaMethod *ResponsePaymentInitiationChoosenScaMethod `json:"choosenScaMethod,omitempty"`
	// Podría ser usado por el ASPSP para transportar comisiones por conversión específica de la moneda asociada a la transferencia de crédito iniciada.
	CurrencyConversionFee *ResponsePaymentInitiationCurrencyConversionFee `json:"currencyConversionFee,omitempty"`
	// Importe estimado a ser transferido al beneficiario.
	EstimatedInterbankSettlemenAmount *ResponsePaymentInitiationEstimatedInterbankSettlemenAmount `json:"estimatedInterbankSettlemenAmount,omitempty"`
	// Importe el cual se estima que será retirado de la cuenta del ordenante. Nota: este importe incluye comisiones.
	EstimatedTotalAmount *ResponsePaymentInitiationEstimatedTotalAmount `json:"estimatedTotalAmount,omitempty"`
	// Identificador del recurso que referencia a la iniciación de pago.
	PaymentID string `json:"paymentId"`
	// Texto enviado al TPP a través del HUB para ser mostrado al PSU.
	PsuMessage *string `json:"psuMessage,omitempty"`
	// Este elemento es contenido si SCA es requerido y si el PSU puede elegir entre diferentes métodos de autenticación.
	ScaMethods *ResponsePaymentInitiationScaMethods `json:"scaMethods,omitempty"`
	// Mensaje para el TPP enviado a través del HUB.
	TppMessages *ResponsePaymentInitiationTppMessages `json:"tppMessages,omitempty"`
	// Si es igual a "true", la transacción implicará una comisión según el ASPSP o según lo acordado entre ASPSP y PSU. Si es igual a "false", la transacción no implicará ninguna comisión adicional para el PSU.
	TransactionFeeIndicator *bool `json:"transactionFeeIndicator,omitempty"`
	// Comisiones asociadas al pago.
	TransactionFees *ResponsePaymentInitiationTransactionFees `json:"transactionFees,omitempty"`
	// Estado de la transaccion
	TransactionStatus string `json:"transactionStatus"`
}

func (o *ResponsePaymentInitiation) GetLinks() *ResponsePaymentInitiationLinks {
	if o == nil {
		return nil
	}
	return o.Links
}

func (o *ResponsePaymentInitiation) GetChoosenScaMethod() *ResponsePaymentInitiationChoosenScaMethod {
	if o == nil {
		return nil
	}
	return o.ChoosenScaMethod
}

func (o *ResponsePaymentInitiation) GetCurrencyConversionFee() *ResponsePaymentInitiationCurrencyConversionFee {
	if o == nil {
		return nil
	}
	return o.CurrencyConversionFee
}

func (o *ResponsePaymentInitiation) GetEstimatedInterbankSettlemenAmount() *ResponsePaymentInitiationEstimatedInterbankSettlemenAmount {
	if o == nil {
		return nil
	}
	return o.EstimatedInterbankSettlemenAmount
}

func (o *ResponsePaymentInitiation) GetEstimatedTotalAmount() *ResponsePaymentInitiationEstimatedTotalAmount {
	if o == nil {
		return nil
	}
	return o.EstimatedTotalAmount
}

func (o *ResponsePaymentInitiation) GetPaymentID() string {
	if o == nil {
		return ""
	}
	return o.PaymentID
}

func (o *ResponsePaymentInitiation) GetPsuMessage() *string {
	if o == nil {
		return nil
	}
	return o.PsuMessage
}

func (o *ResponsePaymentInitiation) GetScaMethods() *ResponsePaymentInitiationScaMethods {
	if o == nil {
		return nil
	}
	return o.ScaMethods
}

func (o *ResponsePaymentInitiation) GetTppMessages() *ResponsePaymentInitiationTppMessages {
	if o == nil {
		return nil
	}
	return o.TppMessages
}

func (o *ResponsePaymentInitiation) GetTransactionFeeIndicator() *bool {
	if o == nil {
		return nil
	}
	return o.TransactionFeeIndicator
}

func (o *ResponsePaymentInitiation) GetTransactionFees() *ResponsePaymentInitiationTransactionFees {
	if o == nil {
		return nil
	}
	return o.TransactionFees
}

func (o *ResponsePaymentInitiation) GetTransactionStatus() string {
	if o == nil {
		return ""
	}
	return o.TransactionStatus
}
