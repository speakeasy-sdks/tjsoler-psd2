// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// ResponseGetMultibankPaymentDebtorAccount - Cuenta del ordenante .
type ResponseGetMultibankPaymentDebtorAccount struct {
}

// ResponseGetMultibankPaymentInstructedAmount - Importe de la transferencia .
type ResponseGetMultibankPaymentInstructedAmount struct {
}

// ResponseGetMultibankPaymentPaymentPeriod - Periodo por el que se realiza el pago
type ResponseGetMultibankPaymentPaymentPeriod struct {
}

// ResponseGetMultibankPaymentTppMessages - Mensaje para el TPP enviado a través del HUB.
type ResponseGetMultibankPaymentTppMessages struct {
}

type ResponseGetMultibankPayment struct {
	// Cuenta del ordenante .
	DebtorAccount *ResponseGetMultibankPaymentDebtorAccount `json:"debtorAccount,omitempty"`
	// Entidad del pago Multibanco
	EntityCode *int64 `json:"entityCode,omitempty"`
	// Importe de la transferencia .
	InstructedAmount *ResponseGetMultibankPaymentInstructedAmount `json:"instructedAmount,omitempty"`
	// Número de factura/recibo
	InvoiceNumber *string `json:"invoiceNumber,omitempty"`
	// Referencia obtenida en la consulta de valor a pagar a la Seguridad Social.
	OperationReference *string `json:"operationReference,omitempty"`
	// Código de parámetro asociado al importe. Obtenido en la consulta de catálogo de special-service-payments
	ParameterCode *int64 `json:"parameterCode,omitempty"`
	// Periodo por el que se realiza el pago
	PaymentPeriod *ResponseGetMultibankPaymentPaymentPeriod `json:"paymentPeriod,omitempty"`
	// Referencia del pago Multibanco .
	PaymentReference *string `json:"paymentReference,omitempty"`
	// Valores posibles para service-payments 1- Servicios 2 – Compras Valores posibles para special-service-payments - Devueltos en catálogo
	PaymentType *int64 `json:"paymentType,omitempty"`
	// Código del tipo de pago. Devuelto en el catalogo de tipos pagos al sector público
	PaymentTypeCode *string `json:"paymentTypeCode,omitempty"`
	// Texto enviado al TPP a través del HUB para ser mostrado al PSU.
	PsuMessage *string `json:"psuMessage,omitempty"`
	// Fecha de ejecución futura
	RequestedExecutionDate *string `json:"requestedExecutionDate,omitempty"`
	// Número de identificación del contribuyente
	TaxpayerIdentificationNumber *int64 `json:"taxpayerIdentificationNumber,omitempty"`
	// Mensaje para el TPP enviado a través del HUB.
	TppMessages *ResponseGetMultibankPaymentTppMessages `json:"tppMessages,omitempty"`
	// Estado de la transacción
	TransactionStatus *string `json:"transactionStatus,omitempty"`
	// Código del centro TSU
	TsuCenterCode *int64 `json:"tsuCenterCode,omitempty"`
}

func (o *ResponseGetMultibankPayment) GetDebtorAccount() *ResponseGetMultibankPaymentDebtorAccount {
	if o == nil {
		return nil
	}
	return o.DebtorAccount
}

func (o *ResponseGetMultibankPayment) GetEntityCode() *int64 {
	if o == nil {
		return nil
	}
	return o.EntityCode
}

func (o *ResponseGetMultibankPayment) GetInstructedAmount() *ResponseGetMultibankPaymentInstructedAmount {
	if o == nil {
		return nil
	}
	return o.InstructedAmount
}

func (o *ResponseGetMultibankPayment) GetInvoiceNumber() *string {
	if o == nil {
		return nil
	}
	return o.InvoiceNumber
}

func (o *ResponseGetMultibankPayment) GetOperationReference() *string {
	if o == nil {
		return nil
	}
	return o.OperationReference
}

func (o *ResponseGetMultibankPayment) GetParameterCode() *int64 {
	if o == nil {
		return nil
	}
	return o.ParameterCode
}

func (o *ResponseGetMultibankPayment) GetPaymentPeriod() *ResponseGetMultibankPaymentPaymentPeriod {
	if o == nil {
		return nil
	}
	return o.PaymentPeriod
}

func (o *ResponseGetMultibankPayment) GetPaymentReference() *string {
	if o == nil {
		return nil
	}
	return o.PaymentReference
}

func (o *ResponseGetMultibankPayment) GetPaymentType() *int64 {
	if o == nil {
		return nil
	}
	return o.PaymentType
}

func (o *ResponseGetMultibankPayment) GetPaymentTypeCode() *string {
	if o == nil {
		return nil
	}
	return o.PaymentTypeCode
}

func (o *ResponseGetMultibankPayment) GetPsuMessage() *string {
	if o == nil {
		return nil
	}
	return o.PsuMessage
}

func (o *ResponseGetMultibankPayment) GetRequestedExecutionDate() *string {
	if o == nil {
		return nil
	}
	return o.RequestedExecutionDate
}

func (o *ResponseGetMultibankPayment) GetTaxpayerIdentificationNumber() *int64 {
	if o == nil {
		return nil
	}
	return o.TaxpayerIdentificationNumber
}

func (o *ResponseGetMultibankPayment) GetTppMessages() *ResponseGetMultibankPaymentTppMessages {
	if o == nil {
		return nil
	}
	return o.TppMessages
}

func (o *ResponseGetMultibankPayment) GetTransactionStatus() *string {
	if o == nil {
		return nil
	}
	return o.TransactionStatus
}

func (o *ResponseGetMultibankPayment) GetTsuCenterCode() *int64 {
	if o == nil {
		return nil
	}
	return o.TsuCenterCode
}
